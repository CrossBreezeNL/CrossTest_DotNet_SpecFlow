//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
namespace CrossBeeze.CrossTest.Process.PowerCenter.proxyclasses {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    using CrossBeeze.CrossTest.Process.PowerCenter.PowerCenterWebService1;

    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DataIntegrationServiceSoapBinding", Namespace="http://www.informatica.com/wsh")]
    public class DataIntegrationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public SessionHeader Context;
        
        /// <remarks/>
        public DataIntegrationService(string url) {
            this.Url = url;
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("InitializeDIServerConnectionReturn", Namespace="http://www.informatica.com/wsh")]
        public VoidResponse InitializeDIServerConnection([System.Xml.Serialization.XmlElementAttribute("InitializeDIServerConnection", Namespace="http://www.informatica.com/wsh")] InitializeDIServerConnectionRequest InitializeDIServerConnection1) {
            object[] results = this.Invoke("InitializeDIServerConnection", new object[] {
                        InitializeDIServerConnection1});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInitializeDIServerConnection(InitializeDIServerConnectionRequest InitializeDIServerConnection1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InitializeDIServerConnection", new object[] {
                        InitializeDIServerConnection1}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndInitializeDIServerConnection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeinitializeDIServerConnectionReturn", Namespace="http://www.informatica.com/wsh")]
        public VoidResponse DeinitializeDIServerConnection([System.Xml.Serialization.XmlElementAttribute("DeinitializeDIServerConnection", Namespace="http://www.informatica.com/wsh")] VoidRequest DeinitializeDIServerConnection1) {
            object[] results = this.Invoke("DeinitializeDIServerConnection", new object[] {
                        DeinitializeDIServerConnection1});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeinitializeDIServerConnection(VoidRequest DeinitializeDIServerConnection1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeinitializeDIServerConnection", new object[] {
                        DeinitializeDIServerConnection1}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndDeinitializeDIServerConnection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("StopDIServerReturn", Namespace="http://www.informatica.com/wsh")]
        public VoidResponse StopDIServer([System.Xml.Serialization.XmlElementAttribute("StopDIServer", Namespace="http://www.informatica.com/wsh")] StopDIServerRequest StopDIServer1) {
            object[] results = this.Invoke("StopDIServer", new object[] {
                        StopDIServer1});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStopDIServer(StopDIServerRequest StopDIServer1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StopDIServer", new object[] {
                        StopDIServer1}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndStopDIServer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("StartWorkflowLogFetchReturn", Namespace="http://www.informatica.com/wsh")]
        public int StartWorkflowLogFetch([System.Xml.Serialization.XmlElementAttribute("StartWorkflowLogFetch", Namespace="http://www.informatica.com/wsh")] StartWorkflowLogFetchRequest StartWorkflowLogFetch1) {
            object[] results = this.Invoke("StartWorkflowLogFetch", new object[] {
                        StartWorkflowLogFetch1});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStartWorkflowLogFetch(StartWorkflowLogFetchRequest StartWorkflowLogFetch1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartWorkflowLogFetch", new object[] {
                        StartWorkflowLogFetch1}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndStartWorkflowLogFetch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("StartSessionLogFetchReturn", Namespace="http://www.informatica.com/wsh")]
        public int StartSessionLogFetch([System.Xml.Serialization.XmlElementAttribute("StartSessionLogFetch", Namespace="http://www.informatica.com/wsh")] StartSessionLogFetchRequest StartSessionLogFetch1) {
            object[] results = this.Invoke("StartSessionLogFetch", new object[] {
                        StartSessionLogFetch1});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStartSessionLogFetch(StartSessionLogFetchRequest StartSessionLogFetch1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartSessionLogFetch", new object[] {
                        StartSessionLogFetch1}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndStartSessionLogFetch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetNextLogSegmentReturn", Namespace="http://www.informatica.com/wsh")]
        public LogSegment GetNextLogSegment([System.Xml.Serialization.XmlElementAttribute("GetNextLogSegment", Namespace="http://www.informatica.com/wsh")] GetNextLogSegmentRequest GetNextLogSegment1) {
            object[] results = this.Invoke("GetNextLogSegment", new object[] {
                        GetNextLogSegment1});
            return ((LogSegment)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNextLogSegment(GetNextLogSegmentRequest GetNextLogSegment1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNextLogSegment", new object[] {
                        GetNextLogSegment1}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogSegment EndGetNextLogSegment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogSegment)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("PingDIServerReturn", Namespace="http://www.informatica.com/wsh")]
        public EPingState pingDIServer([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] PingDIServerRequest PingDIServer) {
            object[] results = this.Invoke("pingDIServer", new object[] {
                        PingDIServer});
            return ((EPingState)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginpingDIServer(PingDIServerRequest PingDIServer, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("pingDIServer", new object[] {
                        PingDIServer}, callback, asyncState);
        }
        
        /// <remarks/>
        public EPingState EndpingDIServer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((EPingState)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetDIServerPropertiesReturn", Namespace="http://www.informatica.com/wsh")]
        public DIServerProperties getDIServerProperties([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh", IsNullable=true)] DIServiceInfo GetDIServerProperties) {
            object[] results = this.Invoke("getDIServerProperties", new object[] {
                        GetDIServerProperties});
            return ((DIServerProperties)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDIServerProperties(DIServiceInfo GetDIServerProperties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDIServerProperties", new object[] {
                        GetDIServerProperties}, callback, asyncState);
        }
        
        /// <remarks/>
        public DIServerProperties EndgetDIServerProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DIServerProperties)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("StartWorkflowReturn", Namespace="http://www.informatica.com/wsh", IsNullable=true)]
        public VoidResponse startWorkflow([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] WorkflowRequest StartWorkflow) {
            object[] results = this.Invoke("startWorkflow", new object[] {
                        StartWorkflow});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstartWorkflow(WorkflowRequest StartWorkflow, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("startWorkflow", new object[] {
                        StartWorkflow}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndstartWorkflow(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("StartWorkflowFromTaskReturn", Namespace="http://www.informatica.com/wsh", IsNullable=true)]
        public VoidResponse startWorkflowFromTask([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] WorkflowRequest StartWorkflowFromTask) {
            object[] results = this.Invoke("startWorkflowFromTask", new object[] {
                        StartWorkflowFromTask});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstartWorkflowFromTask(WorkflowRequest StartWorkflowFromTask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("startWorkflowFromTask", new object[] {
                        StartWorkflowFromTask}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndstartWorkflowFromTask(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("StopWorkflowReturn", Namespace="http://www.informatica.com/wsh", IsNullable=true)]
        public VoidResponse stopWorkflow([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] WorkflowRequest StopWorkflow) {
            object[] results = this.Invoke("stopWorkflow", new object[] {
                        StopWorkflow});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstopWorkflow(WorkflowRequest StopWorkflow, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("stopWorkflow", new object[] {
                        StopWorkflow}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndstopWorkflow(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("ScheduleWorkflowReturn", Namespace="http://www.informatica.com/wsh", IsNullable=true)]
        public VoidResponse scheduleWorkflow([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] WorkflowRequest ScheduleWorkflow) {
            object[] results = this.Invoke("scheduleWorkflow", new object[] {
                        ScheduleWorkflow});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginscheduleWorkflow(WorkflowRequest ScheduleWorkflow, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("scheduleWorkflow", new object[] {
                        ScheduleWorkflow}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndscheduleWorkflow(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UnscheduleWorkflowReturn", Namespace="http://www.informatica.com/wsh", IsNullable=true)]
        public VoidResponse unscheduleWorkflow([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] WorkflowRequest UnscheduleWorkflow) {
            object[] results = this.Invoke("unscheduleWorkflow", new object[] {
                        UnscheduleWorkflow});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginunscheduleWorkflow(WorkflowRequest UnscheduleWorkflow, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("unscheduleWorkflow", new object[] {
                        UnscheduleWorkflow}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndunscheduleWorkflow(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("WaitTillWorkflowCompleteReturn", Namespace="http://www.informatica.com/wsh", IsNullable=true)]
        public VoidResponse waitTillWorkflowComplete([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] WorkflowRequest WaitTillWorkflowComplete) {
            object[] results = this.Invoke("waitTillWorkflowComplete", new object[] {
                        WaitTillWorkflowComplete});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwaitTillWorkflowComplete(WorkflowRequest WaitTillWorkflowComplete, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("waitTillWorkflowComplete", new object[] {
                        WaitTillWorkflowComplete}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndwaitTillWorkflowComplete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResumeWorkflowReturn", Namespace="http://www.informatica.com/wsh", IsNullable=true)]
        public VoidResponse resumeWorkflow([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] WorkflowRequest ResumeWorkflow) {
            object[] results = this.Invoke("resumeWorkflow", new object[] {
                        ResumeWorkflow});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginresumeWorkflow(WorkflowRequest ResumeWorkflow, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("resumeWorkflow", new object[] {
                        ResumeWorkflow}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndresumeWorkflow(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("StartTaskReturn", Namespace="http://www.informatica.com/wsh", IsNullable=true)]
        public VoidResponse startTask([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] TaskRequest StartTask) {
            object[] results = this.Invoke("startTask", new object[] {
                        StartTask});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstartTask(TaskRequest StartTask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("startTask", new object[] {
                        StartTask}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndstartTask(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("StopTaskReturn", Namespace="http://www.informatica.com/wsh", IsNullable=true)]
        public VoidResponse stopTask([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] TaskRequest StopTask) {
            object[] results = this.Invoke("stopTask", new object[] {
                        StopTask});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstopTask(TaskRequest StopTask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("stopTask", new object[] {
                        StopTask}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndstopTask(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("WaitTillTaskCompleteReturn", Namespace="http://www.informatica.com/wsh", IsNullable=true)]
        public VoidResponse waitTillTaskComplete([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] TaskRequest WaitTillTaskComplete) {
            object[] results = this.Invoke("waitTillTaskComplete", new object[] {
                        WaitTillTaskComplete});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwaitTillTaskComplete(TaskRequest WaitTillTaskComplete, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("waitTillTaskComplete", new object[] {
                        WaitTillTaskComplete}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndwaitTillTaskComplete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResumeTaskReturn", Namespace="http://www.informatica.com/wsh", IsNullable=true)]
        public VoidResponse resumeTask([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] TaskRequest ResumeTask) {
            object[] results = this.Invoke("resumeTask", new object[] {
                        ResumeTask});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginresumeTask(TaskRequest ResumeTask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("resumeTask", new object[] {
                        ResumeTask}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndresumeTask(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("MonitorDIServerReturn", Namespace="http://www.informatica.com/wsh")]
        public DIServerDetails monitorDIServer([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] EDIServerMonitorMode MonitorDIServer) {
            object[] results = this.Invoke("monitorDIServer", new object[] {
                        MonitorDIServer});
            return ((DIServerDetails)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmonitorDIServer(EDIServerMonitorMode MonitorDIServer, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("monitorDIServer", new object[] {
                        MonitorDIServer}, callback, asyncState);
        }
        
        /// <remarks/>
        public DIServerDetails EndmonitorDIServer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DIServerDetails)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetWorkflowDetailsReturn", Namespace="http://www.informatica.com/wsh")]
        public WorkflowDetails getWorkflowDetails([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] WorkflowRequest GetWorkflowDetails) {
            object[] results = this.Invoke("getWorkflowDetails", new object[] {
                        GetWorkflowDetails});
            return ((WorkflowDetails)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetWorkflowDetails(WorkflowRequest GetWorkflowDetails, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getWorkflowDetails", new object[] {
                        GetWorkflowDetails}, callback, asyncState);
        }
        
        /// <remarks/>
        public WorkflowDetails EndgetWorkflowDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((WorkflowDetails)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetTaskDetailsReturn", Namespace="http://www.informatica.com/wsh")]
        public TaskDetails getTaskDetails([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] TaskRequest GetTaskDetails) {
            object[] results = this.Invoke("getTaskDetails", new object[] {
                        GetTaskDetails});
            return ((TaskDetails)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTaskDetails(TaskRequest GetTaskDetails, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTaskDetails", new object[] {
                        GetTaskDetails}, callback, asyncState);
        }
        
        /// <remarks/>
        public TaskDetails EndgetTaskDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TaskDetails)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetSessionStatisticsReturn", Namespace="http://www.informatica.com/wsh")]
        public SessionStatistics getSessionStatistics([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] GetSessionStatisticsRequest GetSessionStatistics) {
            object[] results = this.Invoke("getSessionStatistics", new object[] {
                        GetSessionStatistics});
            return ((SessionStatistics)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSessionStatistics(GetSessionStatisticsRequest GetSessionStatistics, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSessionStatistics", new object[] {
                        GetSessionStatistics}, callback, asyncState);
        }
        
        /// <remarks/>
        public SessionStatistics EndgetSessionStatistics(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SessionStatistics)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetSessionPerformanceDataReturn", Namespace="http://www.informatica.com/wsh")]
        public SessionPerformanceData getSessionPerformanceData([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] GetSessionPerformanceDataRequest GetSessionPerformanceData) {
            object[] results = this.Invoke("getSessionPerformanceData", new object[] {
                        GetSessionPerformanceData});
            return ((SessionPerformanceData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSessionPerformanceData(GetSessionPerformanceDataRequest GetSessionPerformanceData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSessionPerformanceData", new object[] {
                        GetSessionPerformanceData}, callback, asyncState);
        }
        
        /// <remarks/>
        public SessionPerformanceData EndgetSessionPerformanceData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SessionPerformanceData)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetWorkflowLogReturn", Namespace="http://www.informatica.com/wsh")]
        public Log getWorkflowLog([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] GetWorkflowLogRequest GetWorkflowLog) {
            object[] results = this.Invoke("getWorkflowLog", new object[] {
                        GetWorkflowLog});
            return ((Log)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetWorkflowLog(GetWorkflowLogRequest GetWorkflowLog, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getWorkflowLog", new object[] {
                        GetWorkflowLog}, callback, asyncState);
        }
        
        /// <remarks/>
        public Log EndgetWorkflowLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Log)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetSessionLogReturn", Namespace="http://www.informatica.com/wsh")]
        public Log getSessionLog([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.informatica.com/wsh")] GetSessionLogRequest GetSessionLog) {
            object[] results = this.Invoke("getSessionLog", new object[] {
                        GetSessionLog});
            return ((Log)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSessionLog(GetSessionLogRequest GetSessionLog, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSessionLog", new object[] {
                        GetSessionLog}, callback, asyncState);
        }
        
        /// <remarks/>
        public Log EndgetSessionLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Log)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class GetSessionLogRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkflowName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string TaskInstancePath;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Timeout;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class DIServiceInfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DomainName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ServiceName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class Log {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FileSize;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Buffer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int CodePage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class GetWorkflowLogRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkflowName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Timeout;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class PerformanceCounter {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CounterName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int CounterValue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WidgetName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class SessionPerformanceData {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkflowName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string InstanceName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ETaskRunStatus TaskRunStatus;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int WorkflowRunId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int WorkletRunId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PerformanceCounter", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public PerformanceCounter[] PerformanceCounter;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public enum ETaskRunStatus {
        
        /// <remarks/>
        SUCCEEDED,
        
        /// <remarks/>
        DISABLED,
        
        /// <remarks/>
        FAILED,
        
        /// <remarks/>
        STOPPED,
        
        /// <remarks/>
        ABORTED,
        
        /// <remarks/>
        RUNNING,
        
        /// <remarks/>
        SUSPENDING,
        
        /// <remarks/>
        SUSPENDED,
        
        /// <remarks/>
        STOPPING,
        
        /// <remarks/>
        ABORTING,
        
        /// <remarks/>
        WAITING,
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        TERMINATED,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class GetSessionPerformanceDataRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkflowName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string TaskInstancePath;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class TableStatistics {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WidgetName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WidgetType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WidgetInstanceName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int LastErrorCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LastErrorMessage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServerDate StartTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServerDate EndTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumAppliedRows;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumAffectedRows;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumRejectedRows;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Throughput;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PartitionName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string GroupName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class DIServerDate {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Date;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NanoSeconds;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Seconds;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Minutes;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Hours;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Month;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Year;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int UTCTime;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class SessionStatistics {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkflowName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string InstanceName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string MappingName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ETaskRunStatus TaskRunStatus;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int WorkletRunId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int LogFileCodePage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumSrcSuccessRows;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumTgtSuccessRows;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumSrcFailedRows;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumTgtFailedRows;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumTransErrors;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumTables;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LogFileName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int WorkflowRunId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FirstErrorCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FirstErrorMessage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TableStatistics", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TableStatistics[] TableStatistics;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class GetSessionStatisticsRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkflowName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string TaskInstancePath;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class TaskDetails {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkflowName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int WorkflowRunId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ETaskRunStatus TaskRunStatus;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ETaskType TaskType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int RunErrorCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string RunErrorMessage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServerDate StartTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServerDate EndTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkletInstanceName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ChildRunId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string InstanceName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsSessionTask;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int WorkletRunId;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public enum ETaskType {
        
        /// <remarks/>
        COMMAND_TASK,
        
        /// <remarks/>
        DECISION_TASK,
        
        /// <remarks/>
        EVENTWAIT_TASK,
        
        /// <remarks/>
        EVENTRAISE_TASK,
        
        /// <remarks/>
        STARTWORKFLOW_TASK,
        
        /// <remarks/>
        ABORTWORKFLOW_TASK,
        
        /// <remarks/>
        STOPWORKFLOW_TASK,
        
        /// <remarks/>
        EMAIL_TASK,
        
        /// <remarks/>
        TIMER_TASK,
        
        /// <remarks/>
        ASSIGNMENT_TASK,
        
        /// <remarks/>
        SESSION_TASK,
        
        /// <remarks/>
        WORKLET_TASK,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class LinkDetails {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkflowName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkletInstanceName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskDetails FromTaskInstanceDetails;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskDetails ToTaskInstanceDetails;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int WorkflowRunId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int WorkletRunId;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class WorkflowDetails {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkflowName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int WorkflowRunId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EWorkflowRunStatus WorkflowRunStatus;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EWorkflowRunType WorkflowRunType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int RunErrorCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string RunErrorMessage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServerDate StartTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServerDate EndTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string UserName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LogFileName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int LogFileCodePage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public enum EWorkflowRunStatus {
        
        /// <remarks/>
        SUCCEEDED,
        
        /// <remarks/>
        FAILED,
        
        /// <remarks/>
        STOPPED,
        
        /// <remarks/>
        ABORTED,
        
        /// <remarks/>
        RUNNING,
        
        /// <remarks/>
        SUSPENDING,
        
        /// <remarks/>
        SUSPENDED,
        
        /// <remarks/>
        STOPPING,
        
        /// <remarks/>
        ABORTING,
        
        /// <remarks/>
        WAITING,
        
        /// <remarks/>
        SCHEDULED,
        
        /// <remarks/>
        UNSCHEDULED,
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        TERMINATED,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public enum EWorkflowRunType {
        
        /// <remarks/>
        SCHEDULE,
        
        /// <remarks/>
        USER_REQUEST,
        
        /// <remarks/>
        DEBUG_SESSION,
        
        /// <remarks/>
        SERVER_INIT,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class DIServerDetails {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EDIServerRunStatus DIServerStatus;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServerDate CurrentTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServerDate StartupTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServerDate ReferenceTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WorkflowDetails", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public WorkflowDetails[] WorkflowDetails;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LinkDetails", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public LinkDetails[] LinkDetails;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TaskDetails", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskDetails[] TaskDetails;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public enum EDIServerRunStatus {
        
        /// <remarks/>
        INITIALIZING,
        
        /// <remarks/>
        RUNNING,
        
        /// <remarks/>
        SHUTTING_DOWN,
        
        /// <remarks/>
        STOPPING,
        
        /// <remarks/>
        ABORTING,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class TaskRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkflowName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ParameterFileName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ETaskRunMode RequestMode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string TaskInstancePath;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsAbort;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public enum ETaskRunMode {
        
        /// <remarks/>
        NORMAL,
        
        /// <remarks/>
        RECOVERY,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class Parameter {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Scope;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class WorkflowRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WorkflowName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Reason;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ParameterFileName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Parameters", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Parameter[] Parameters;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ETaskRunMode RequestMode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string TaskInstancePath;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsAbort;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class DIServerProperties {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DIServerName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Repositoryname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool CanInfaServerDebugMapping;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EDIServerMode DIServerMode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DIServerVersion;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServerDate CurrentTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServerDate StartupTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ProductName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public enum EDIServerMode {
        
        /// <remarks/>
        ASCII,
        
        /// <remarks/>
        UNICODE,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class PingDIServerRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int TimeOut;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class LogSegment {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FileSize;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Buffer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool EndOfLog;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int CodePage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int BufferSize;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class GetNextLogSegmentRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int LogHandle;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int TimeOut;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class StartSessionLogFetchRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WorkflowName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TaskInstancePath;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class StartWorkflowLogFetchRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DIServiceInfo DIServiceInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FolderName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WorkflowName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class StopDIServerRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EShutdownMode ShutdownMode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Reason;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public enum EShutdownMode {
        
        /// <remarks/>
        COMPLETE,
        
        /// <remarks/>
        STOP,
        
        /// <remarks/>
        ABORT,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class VoidResponse {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class InitializeDIServerConnectionRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LoginHandle;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DIServerName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DIServerDomain;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public enum EPingState {
        
        /// <remarks/>
        ALIVE,
        
        /// <remarks/>
        FAIL,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public enum EDIServerMonitorMode {
        
        /// <remarks/>
        ALL,
        
        /// <remarks/>
        RUNNING,
        
        /// <remarks/>
        SCHEDULED,
    }
}
