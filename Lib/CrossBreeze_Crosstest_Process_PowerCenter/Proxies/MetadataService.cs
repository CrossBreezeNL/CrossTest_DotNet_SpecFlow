//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
namespace CrossBeeze.CrossTest.Process.PowerCenter.proxyclasses {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MetadataServiceSoapBinding", Namespace="http://www.informatica.com/wsh")]
    public class MetadataService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public SessionHeader Context;
        
        /// <remarks/>
        public MetadataService(string url) {
            this.Url = url;
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("LoginReturn", Namespace="http://www.informatica.com/wsh")]
        public string Login([System.Xml.Serialization.XmlElementAttribute("Login", Namespace="http://www.informatica.com/wsh")] LoginRequest Login1) {
            object[] results = this.Invoke("Login", new object[] {
                        Login1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(LoginRequest Login1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Login", new object[] {
                        Login1}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("LogoutReturn", Namespace="http://www.informatica.com/wsh")]
        public VoidResponse Logout([System.Xml.Serialization.XmlElementAttribute("Logout", Namespace="http://www.informatica.com/wsh")] VoidRequest Logout1) {
            object[] results = this.Invoke("Logout", new object[] {
                        Logout1});
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogout(VoidRequest Logout1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Logout", new object[] {
                        Logout1}, callback, asyncState);
        }
        
        /// <remarks/>
        public VoidResponse EndLogout(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VoidResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAllFoldersReturn", Namespace="http://www.informatica.com/wsh")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Namespace="http://www.informatica.com/wsh", IsNullable=false)]
        public FolderInfo[] GetAllFolders([System.Xml.Serialization.XmlElementAttribute("GetAllFolders", Namespace="http://www.informatica.com/wsh", IsNullable=true)] VoidRequest GetAllFolders1) {
            object[] results = this.Invoke("GetAllFolders", new object[] {
                        GetAllFolders1});
            return ((FolderInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllFolders(VoidRequest GetAllFolders1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllFolders", new object[] {
                        GetAllFolders1}, callback, asyncState);
        }
        
        /// <remarks/>
        public FolderInfo[] EndGetAllFolders(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FolderInfo[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAllWorkflowsReturn", Namespace="http://www.informatica.com/wsh")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Namespace="http://www.informatica.com/wsh", IsNullable=false)]
        public WorkflowInfo[] GetAllWorkflows([System.Xml.Serialization.XmlElementAttribute("GetAllWorkflows", Namespace="http://www.informatica.com/wsh")] FolderInfo GetAllWorkflows1) {
            object[] results = this.Invoke("GetAllWorkflows", new object[] {
                        GetAllWorkflows1});
            return ((WorkflowInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllWorkflows(FolderInfo GetAllWorkflows1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllWorkflows", new object[] {
                        GetAllWorkflows1}, callback, asyncState);
        }
        
        /// <remarks/>
        public WorkflowInfo[] EndGetAllWorkflows(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((WorkflowInfo[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAllTaskInstancesReturn", Namespace="http://www.informatica.com/wsh")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Namespace="http://www.informatica.com/wsh", IsNullable=false)]
        public TaskInstanceInfo[] GetAllTaskInstances([System.Xml.Serialization.XmlElementAttribute("GetAllTaskInstances", Namespace="http://www.informatica.com/wsh")] GetAllTaskInstancesRequest GetAllTaskInstances1) {
            object[] results = this.Invoke("GetAllTaskInstances", new object[] {
                        GetAllTaskInstances1});
            return ((TaskInstanceInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllTaskInstances(GetAllTaskInstancesRequest GetAllTaskInstances1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllTaskInstances", new object[] {
                        GetAllTaskInstances1}, callback, asyncState);
        }
        
        /// <remarks/>
        public TaskInstanceInfo[] EndGetAllTaskInstances(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TaskInstanceInfo[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Context")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAllDIServersReturn", Namespace="http://www.informatica.com/wsh")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Namespace="http://www.informatica.com/wsh", IsNullable=false)]
        public DIServerInfo[] GetAllDIServers([System.Xml.Serialization.XmlElementAttribute("GetAllDIServers", Namespace="http://www.informatica.com/wsh", IsNullable=true)] VoidRequest GetAllDIServers1) {
            object[] results = this.Invoke("GetAllDIServers", new object[] {
                        GetAllDIServers1});
            return ((DIServerInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllDIServers(VoidRequest GetAllDIServers1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllDIServers", new object[] {
                        GetAllDIServers1}, callback, asyncState);
        }
        
        /// <remarks/>
        public DIServerInfo[] EndGetAllDIServers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DIServerInfo[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAllRepositoriesReturn", Namespace="http://www.informatica.com/wsh")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Namespace="http://www.informatica.com/wsh", IsNullable=false)]
        public RepositoryInfo[] GetAllRepositories([System.Xml.Serialization.XmlElementAttribute("GetAllRepositories", Namespace="http://www.informatica.com/wsh", IsNullable=true)] VoidRequest GetAllRepositories1) {
            object[] results = this.Invoke("GetAllRepositories", new object[] {
                        GetAllRepositories1});
            return ((RepositoryInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllRepositories(VoidRequest GetAllRepositories1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllRepositories", new object[] {
                        GetAllRepositories1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RepositoryInfo[] EndGetAllRepositories(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RepositoryInfo[])(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    [System.Xml.Serialization.XmlRootAttribute("Context", Namespace="http://www.informatica.com/wsh", IsNullable=false)]
    public class SessionHeader : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SessionId;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class RepositoryInfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class DIServerInfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class TaskInstanceInfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Type;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ChildTask", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskInstanceInfo[] ChildTask;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsValid;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class GetAllTaskInstancesRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WorkflowInfo WorkflowInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Depth;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class WorkflowInfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsValid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FolderName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class FolderInfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class VoidRequest {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.informatica.com/wsh")]
    public class LoginRequest {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string RepositoryDomainName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RepositoryName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Password;
    }
}
