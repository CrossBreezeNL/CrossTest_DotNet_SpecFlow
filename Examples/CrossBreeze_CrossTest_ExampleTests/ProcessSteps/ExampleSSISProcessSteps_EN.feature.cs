// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CrossBreeze.CrossTest.ExampleTests.ProcessSteps
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RunExampleSSISProcesENFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "ExampleSSISProcessSteps_EN.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en"), "Run Example SSIS proces (EN)", null, ProgrammingLanguage.CSharp, new string[] {
                        "SSIS"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Run Example SSIS proces (EN)")))
            {
                global::CrossBreeze.CrossTest.ExampleTests.ProcessSteps.RunExampleSSISProcesENFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line 6
 testRunner.Given("the ExampleMsSqlServer database server is used", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("the TestDB database is used", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And("the table [dbo].[TestTable] is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Run SSIS proces")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Run Example SSIS proces (EN)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SSIS")]
        public virtual void RunSSISProces()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Run SSIS proces", null, ((string[])(null)));
#line 10
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
this.FeatureBackground();
#line 11
 testRunner.When("the ExamplePackage SSIS process in the ExampleSsisISPacProject project is being e" +
                    "xecuted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.And("I retrieve the contents of the [dbo].[TestTable] table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description"});
            table1.AddRow(new string[] {
                        "1",
                        "\'FirstRow\'"});
#line 13
 testRunner.Then("I expect the following results:", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Run typed SSIS proces")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Run Example SSIS proces (EN)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SSIS")]
        public virtual void RunTypedSSISProces()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Run typed SSIS proces", null, ((string[])(null)));
#line 17
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
this.FeatureBackground();
#line 18
 testRunner.When("the ExamplePackage dwh SSIS process in the ExampleSsisISPacProject project is bei" +
                    "ng executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.And("I retrieve the contents of the [dbo].[TestTable] table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description"});
            table2.AddRow(new string[] {
                        "1",
                        "\'FirstRow\'"});
#line 20
 testRunner.Then("I expect the following results:", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Run SSIS proces with parameters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Run Example SSIS proces (EN)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SSIS")]
        public virtual void RunSSISProcesWithParameters()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Run SSIS proces with parameters", null, ((string[])(null)));
#line 24
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Parameter",
                        "Value"});
            table3.AddRow(new string[] {
                        "ExampleParameter",
                        "SomeParameterValue"});
#line 25
 testRunner.When("the ExamplePackage SSIS process in the ExampleSsisISPacProject project is being e" +
                    "xecuted with the following parameter:", ((string)(null)), table3, "When ");
#line 28
 testRunner.And("I retrieve the contents of the [dbo].[TestTable] table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description"});
            table4.AddRow(new string[] {
                        "1",
                        "\'FirstRow\'"});
#line 29
 testRunner.Then("I expect the following results:", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Run typed SSIS proces with parameters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Run Example SSIS proces (EN)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SSIS")]
        public virtual void RunTypedSSISProcesWithParameters()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Run typed SSIS proces with parameters", null, ((string[])(null)));
#line 33
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Parameter",
                        "Value"});
            table5.AddRow(new string[] {
                        "ExampleParameter",
                        "SomeParameterValue"});
#line 34
 testRunner.When("the ExamplePackage dwh SSIS process in the ExampleSsisISPacProject project is bei" +
                    "ng executed with the following parameter:", ((string)(null)), table5, "When ");
#line 37
 testRunner.And("I retrieve the contents of the [dbo].[TestTable] table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description"});
            table6.AddRow(new string[] {
                        "1",
                        "\'FirstRow\'"});
#line 38
 testRunner.Then("I expect the following results:", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Run SSIS proces as role")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Run Example SSIS proces (EN)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SSIS")]
        public virtual void RunSSISProcesAsRole()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Run SSIS proces as role", null, ((string[])(null)));
#line 42
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
this.FeatureBackground();
#line 43
 testRunner.When("the developer executes the ExamplePackage SSIS process in the ExampleSsisISPacPro" +
                    "ject project", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.And("I retrieve the contents of the [dbo].[TestTable] table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description"});
            table7.AddRow(new string[] {
                        "1",
                        "\'FirstRow\'"});
#line 45
 testRunner.Then("I expect the following results:", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Run typed SSIS proces as role")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Run Example SSIS proces (EN)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SSIS")]
        public virtual void RunTypedSSISProcesAsRole()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Run typed SSIS proces as role", null, ((string[])(null)));
#line 49
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
this.FeatureBackground();
#line 50
 testRunner.When("the developer executes the ExamplePackage dwh SSIS process in the ExampleSsisISPa" +
                    "cProject project", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.And("I retrieve the contents of the [dbo].[TestTable] table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description"});
            table8.AddRow(new string[] {
                        "1",
                        "\'FirstRow\'"});
#line 52
 testRunner.Then("I expect the following results:", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Run typed SSIS proces as role with space")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Run Example SSIS proces (EN)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SSIS")]
        public virtual void RunTypedSSISProcesAsRoleWithSpace()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Run typed SSIS proces as role with space", null, ((string[])(null)));
#line 56
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
this.FeatureBackground();
#line 57
 testRunner.When("the Data Warhouse Developer executes the ExamplePackage dwh SSIS process in the E" +
                    "xampleSsisISPacProject project", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.And("I retrieve the contents of the [dbo].[TestTable] table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description"});
            table9.AddRow(new string[] {
                        "1",
                        "\'FirstRow\'"});
#line 59
 testRunner.Then("I expect the following results:", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Run SSIS proces with parameters as role")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Run Example SSIS proces (EN)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SSIS")]
        public virtual void RunSSISProcesWithParametersAsRole()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Run SSIS proces with parameters as role", null, ((string[])(null)));
#line 63
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Parameter",
                        "Value"});
            table10.AddRow(new string[] {
                        "ExampleParameter",
                        "SomeParameterValue"});
#line 64
 testRunner.When("the developer executes the ExamplePackage SSIS process in the ExampleSsisISPacPro" +
                    "ject project with the following parameter:", ((string)(null)), table10, "When ");
#line 67
 testRunner.And("I retrieve the contents of the [dbo].[TestTable] table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description"});
            table11.AddRow(new string[] {
                        "1",
                        "\'FirstRow\'"});
#line 68
 testRunner.Then("I expect the following results:", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Run typed SSIS proces with parameters as role")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Run Example SSIS proces (EN)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SSIS")]
        public virtual void RunTypedSSISProcesWithParametersAsRole()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Run typed SSIS proces with parameters as role", null, ((string[])(null)));
#line 72
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Parameter",
                        "Value"});
            table12.AddRow(new string[] {
                        "ExampleParameter",
                        "SomeParameterValue"});
#line 73
 testRunner.When("the developer executes the ExamplePackage dwh SSIS process in the ExampleSsisISPa" +
                    "cProject project with the following parameter:", ((string)(null)), table12, "When ");
#line 76
 testRunner.And("I retrieve the contents of the [dbo].[TestTable] table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description"});
            table13.AddRow(new string[] {
                        "1",
                        "\'FirstRow\'"});
#line 77
 testRunner.Then("I expect the following results:", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
